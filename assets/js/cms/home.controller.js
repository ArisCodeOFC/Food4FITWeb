/* Generated by Babel */
"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var HomeController = (function () {
    function HomeController(element) {
        _classCallCheck(this, HomeController);

        this.element = element;
    }

    _createClass(HomeController, [{
        key: "init",
        value: function init() {
            this.loadView(location.hash.replace(/[#\/]/g, "") || "dashboard");
            this.element.find("a[data-page-load]").on("click", this.changeView.bind(this));
            this.element.find(".btn-logout").on("click", this.logout.bind(this));
            this.element.find("#sidebar-collapse").on("click", this.collapseSidebar.bind(this));
            this.element.on("mouseenter", "#sidebar.collapse nav a", this.sidebarMouseEnter.bind(this));
            this.element.on("mouseleave", "#sidebar.collapse nav a", this.sidebarMouseLeave.bind(this));
        }
    }, {
        key: "loadView",
        value: function loadView(pagina) {
            var _this = this;

            var routerLink = this.element.find("#sidebar nav a[data-page-load='" + pagina + "']");
            var controller = routerLink.data("pageController");

            $.get(pagina + ".php", function (conteudo) {
                _this.element.find("#page-content").html(conteudo);
                _this.element.find("#sidebar nav a").removeClass("active");
                var texto = routerLink.addClass("active").find(".label").contents().get(0).nodeValue;

                _this.element.find("#titulo-pagina").text(texto);
                window.location.hash = "#/" + pagina;

                var instance = f4fApp.setElementController(_this.element, controller);
                if (instance && instance.init) {
                    instance.init();
                }
            });
        }
    }, {
        key: "changeView",
        value: function changeView(event) {
            event.preventDefault();
            this.loadView($(event.currentTarget).data("page-load"));
        }
    }, {
        key: "logout",
        value: function logout(event) {
            event.preventDefault();
            $.ajax({
                url: "../api/v1/funcionarios/logout",
                type: "POST",
                success: function success() {
                    window.location.href = "login.php";
                },

                error: function error() {
                    f4fApp.abrirToast("Não foi possível efetuar o logout.");
                }
            });
        }
    }, {
        key: "collapseSidebar",
        value: function collapseSidebar(event) {
            event.preventDefault();
            this.element.find("#sidebar").toggleClass("collapse");
        }
    }, {
        key: "sidebarMouseEnter",
        value: function sidebarMouseEnter(event) {
            var offset = $(event.currentTarget).offset();
            var texto = $(event.currentTarget).find(".label").contents().get(0).nodeValue;

            this.element.find("#tooltip").text(texto).css({ top: offset.top + 5, left: offset.left + 50 }).show();
        }
    }, {
        key: "sidebarMouseLeave",
        value: function sidebarMouseLeave() {
            this.element.find("#tooltip").hide();
        }
    }]);

    return HomeController;
})();

f4fApp.addController("HomeController", HomeController);
