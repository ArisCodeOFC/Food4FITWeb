/* Generated by Babel */
"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SobreEmpresaController = (function () {
    function SobreEmpresaController(element) {
        _classCallCheck(this, SobreEmpresaController);

        this.element = element;
        this.CRUD_SERVICE = {
            insert: "../api/v1/sobre-nos",
            get: "../api/v1/sobre-nos/{id}",
            "delete": "../api/v1/sobre-nos/{id}",
            update: "../api/v1/sobre-nos/{id}",
            toggle: "../api/v1/sobre-nos/{id}/ativar"
        };
    }

    _createClass(SobreEmpresaController, [{
        key: "init",
        value: function init() {
            var crudController = f4fApp.buildCrud(this.element.find("[data-crud-controller]"));
            if (crudController && crudController.init) {
                crudController.init(this, this.CRUD_SERVICE);
            }

            this.element.find("#tabs [data-for]").on("click", this.changeTab.bind(this));
        }
    }, {
        key: "changeTab",
        value: function changeTab(event) {
            var target = $(event.currentTarget).data("for");
            this.openTab(target);
        }
    }, {
        key: "openTab",
        value: function openTab(target) {
            this.element.find("#tabs-content>*").removeClass("active").filter(target).addClass("active");

            this.element.find("#tabs span[data-for='" + target + "']").addClass("active").siblings().removeClass("active");
        }
    }, {
        key: "buildTemplate",
        value: function buildTemplate(item) {
            var linha = $("<div class='linha'>").attr("data-param-id", item.id);

            $("<div class='coluna image-large'>").append($("<img>").attr("src", "../" + item.foto).attr("alt", item.titulo)).appendTo(linha);

            $("<div class='coluna middle-align medium'>").append($("<span>").text(item.titulo)).appendTo(linha);

            $("<div class='coluna descricao large'>").append($("<div>").text($(item.texto).text())).appendTo(linha);

            $("<div class='coluna'>").append($("<span class='toggle'>").addClass(parseInt(item.ativo) ? "desativar" : "ativar")).append($("<hr>")).append($("<span class='editar'>")).append($("<hr>")).append($("<span class='excluir'>")).appendTo(linha);

            return linha;
        }
    }, {
        key: "onFormCancel",
        value: function onFormCancel() {
            this.element.find("[data-for='#container-form']").text("Adicionar Bloco");
            this.openTab("#container-listagem");
        }
    }, {
        key: "onInsert",
        value: function onInsert() {
            f4fApp.abrirToast("Item inserido com sucesso.");
            this.openTab("#container-listagem");
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            f4fApp.abrirToast("Item atualizado com sucesso.");
            this.element.find("[data-for='#container-form']").text("Adicionar Bloco");
            this.openTab("#container-listagem");
        }
    }, {
        key: "onEditStarted",
        value: function onEditStarted() {
            this.element.find("[data-for='#container-form']").text("Editar Bloco");
            this.openTab("#container-form");
        }
    }, {
        key: "onToggleStatus",
        value: function onToggleStatus(isDisable) {
            f4fApp.abrirToast("Item " + (isDisable ? "desativado" : "ativado") + " com sucesso.");
        }
    }, {
        key: "onDelete",
        value: function onDelete() {
            f4fApp.abrirToast("Item excluído com sucesso.");
        }
    }, {
        key: "validateForm",
        value: function validateForm(data) {
            if (!data.texto) {
                f4fApp.abrirToast("O texto não pode ficar vazio.");
                return false;
            } else if (!data.uploadData && !data.foto) {
                f4fApp.abrirToast("Selecione uma imagem.");
                return false;
            }

            return true;
        }
    }]);

    return SobreEmpresaController;
})();

f4fApp.addController("SobreEmpresaController", SobreEmpresaController);
