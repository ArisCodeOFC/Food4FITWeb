/* Generated by Babel */
"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var IngredienteController = (function () {
    function IngredienteController(element) {
        _classCallCheck(this, IngredienteController);

        this.element = element;
        this.CRUD_SERVICE = {
            list: "../api/v1/ingrediente",
            insert: "../api/v1/ingrediente",
            get: "../api/v1/ingrediente/{id}",
            "delete": "../api/v1/ingrediente/{id}",
            update: "../api/v1/ingrediente/{id}",
            toggle: "../api/v1/ingrediente/{id}/ativar"
        };
    }

    _createClass(IngredienteController, [{
        key: "init",
        value: function init() {
            var crudController = f4fApp.buildCrud(this.element.find("[data-crud-controller]"));
            if (crudController && crudController.init) {
                crudController.init(this, this.CRUD_SERVICE);
            }

            this.element.find("#btn-adicionar-ingrediente").on("click", this.showForm.bind(this));
        }
    }, {
        key: "buildTemplate",
        value: function buildTemplate(ingrediente) {
            var linha = $("<div class='linha'>").attr("data-param-id", ingrediente.id);

            $("<div class='coluna image-small'>").append($("<img>").attr("src", "../" + ingrediente.foto).attr("alt", ingrediente.titulo)).appendTo(linha);

            $("<div class='coluna middle-align medium'>").append($("<span>").text(ingrediente.titulo)).appendTo(linha);

            $("<div class='coluna middle-align medium'>").append($("<span>").text(ingrediente.categoria.titulo)).appendTo(linha);

            $("<div class='coluna descricao large'>").append($("<div>").text($(ingrediente.descricao).text())).appendTo(linha);

            $("<div class='coluna middle-align medium'>").append($("<span>").text("R$ " + moneyFormat(ingrediente.preco))).appendTo(linha);

            $("<div class='coluna'>").append($("<span class='toggle'>").addClass(checkBoolean(ingrediente.ativo) ? "desativar" : "ativar")).append($("<hr>")).append($("<span class='editar'>")).append($("<hr>")).append($("<span class='excluir'>")).appendTo(linha);

            return linha;
        }
    }, {
        key: "showForm",
        value: function showForm(event) {
            if (event) {
                event.preventDefault();
            }

            this.element.find("#form-content").removeClass("display-none");
            this.element.find("#list-content").addClass("display-none");
        }
    }, {
        key: "showList",
        value: function showList() {
            this.element.find("#form-content").addClass("display-none");
            this.element.find("#list-content").removeClass("display-none");
        }
    }, {
        key: "validateForm",
        value: function validateForm(data) {
            if (!data.descricao) {
                f4fApp.abrirToast("A descrição não pode ficar vazia.");
                return false;
            } else if (!data.uploadData && !data.foto) {
                f4fApp.abrirToast("Selecione uma imagem.");
                return false;
            }

            return true;
        }
    }, {
        key: "onEditStarted",
        value: function onEditStarted() {
            this.showForm();
        }
    }, {
        key: "onInsert",
        value: function onInsert() {
            f4fApp.abrirToast("Ingrediente inserido com sucesso.");
            this.showList();
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            f4fApp.abrirToast("Ingrediente atualizado com sucesso.");
            this.showList();
        }
    }, {
        key: "onToggleStatus",
        value: function onToggleStatus(isDisable) {
            f4fApp.abrirToast("Ingrediente " + (isDisable ? "desativado" : "ativado") + " com sucesso.");
        }
    }, {
        key: "onDelete",
        value: function onDelete() {
            f4fApp.abrirToast("Ingrediente excluído com sucesso.");
        }
    }]);

    return IngredienteController;
})();

f4fApp.addController("IngredienteController", IngredienteController);
